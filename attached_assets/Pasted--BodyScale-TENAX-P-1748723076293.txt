# 多言語対応＋設定ページ実装プロンプト

## 🌐 実装目標
**日本語・英語対応の設定ページを構築し、言語切り替えと個人情報管理を統合**
既存のBodyScaleアプリ（TENAX/PERSISTO）に国際化機能を追加

## 🎯 主要機能要件

### 1. 多言語対応システム
```
✅ 日本語・英語の2言語対応
✅ リアルタイム言語切り替え
✅ ブラウザ言語自動検出
✅ ユーザー設定の永続化
✅ 全画面・全機能の翻訳
```

### 2. 設定ページ（Settings Page）
```
✅ 言語切り替えセクション
✅ 個人情報管理セクション
✅ アカウント設定セクション
✅ アプリ設定セクション
✅ データ管理セクション
```

### 3. 個人情報管理機能
```
✅ プロフィール編集（身長・体重・年齢等）
✅ パスワード変更
✅ メールアドレス変更
✅ アカウント削除機能
✅ データエクスポート機能
```

## 🛠 技術実装要件

### フロントエンド多言語化
```javascript
// i18next または react-i18next 使用
import i18n from 'i18next';
import { useTranslation } from 'react-i18next';

// 言語リソース
const resources = {
  ja: {
    translation: {
      "welcome": "ようこそ",
      "settings": "設定",
      "language": "言語",
      "profile": "プロフィール"
    }
  },
  en: {
    translation: {
      "welcome": "Welcome",
      "settings": "Settings", 
      "language": "Language",
      "profile": "Profile"
    }
  }
};
```

### バックエンド対応
```python
# Flask-Babel 使用
from flask_babel import Babel, gettext, ngettext
from flask import request, session

# 言語設定API
@app.route('/api/language', methods=['POST'])
def set_language():
    language = request.json.get('language')
    session['language'] = language
    return jsonify({'status': 'success'})
```

## 📱 設定ページの構成

### **メインセクション**
```
🌐 言語設定 (Language Settings)
├── 日本語 / English 切り替えボタン
├── 自動検出 ON/OFF
└── 設定保存

👤 個人情報 (Personal Information)  
├── 基本情報（身長・体重・年齢・性別）
├── トレーニング目標
├── 身体測定データ履歴
└── プロフィール写真

🔐 アカウント設定 (Account Settings)
├── メールアドレス変更
├── パスワード変更  
├── 二段階認証設定
└── ログイン履歴

⚙️ アプリ設定 (App Settings)
├── 通知設定
├── 測定単位（kg/lbs, cm/inch）
├── テーマ設定
└── 自動バックアップ

📊 データ管理 (Data Management)
├── データエクスポート（CSV/JSON）
├── データ削除
├── バックアップ・復元
└── アカウント完全削除
```

## 🎨 UI/UX設計要件

### デザイン統一
- 既存のミニマリストデザイン（黒/白/グレー）継承
- アイコンベースの直感的なナビゲーション
- レスポンシブ対応
- アニメーション効果

### 言語切り替えUX
```
- ヘッダーに地球アイコン + 現在言語表示
- クリックでドロップダウン表示
- 選択後に即座に全画面更新
- 設定状態の視覚的フィードバック
```

## 📋 翻訳対象コンテンツ

### **全画面共通**
```json
{
  "navigation": {
    "home": "ホーム / Home",
    "training": "トレーニング分析 / Training Analysis", 
    "records": "記録 / Records",
    "measurements": "身体測定 / Body Measurements",
    "settings": "設定 / Settings"
  },
  
  "buttons": {
    "save": "保存 / Save",
    "cancel": "キャンセル / Cancel", 
    "delete": "削除 / Delete",
    "export": "エクスポート / Export",
    "upload": "アップロード / Upload"
  },
  
  "forms": {
    "height": "身長 / Height",
    "weight": "体重 / Weight", 
    "age": "年齢 / Age",
    "exercise": "種目 / Exercise",
    "weight_kg": "重量(kg) / Weight(kg)",
    "reps": "回数 / Reps",
    "sets": "セット / Sets"
  }
}
```

### **トレーニング分析**
```json
{
  "analysis": {
    "form_analysis": "フォーム分析 / Form Analysis",
    "ideal_form": "理想フォーム / Ideal Form", 
    "current_form": "現在のフォーム / Current Form",
    "improvement_points": "改善点 / Improvement Points",
    "good_points": "良い点 / Good Points",
    "recommendations": "推奨事項 / Recommendations"
  }
}
```

### **設定画面専用**
```json
{
  "settings": {
    "language_settings": "言語設定 / Language Settings",
    "personal_info": "個人情報 / Personal Information", 
    "account_settings": "アカウント設定 / Account Settings",
    "app_settings": "アプリ設定 / App Settings",
    "data_management": "データ管理 / Data Management",
    "auto_detect": "自動検出 / Auto Detect",
    "change_password": "パスワード変更 / Change Password",
    "export_data": "データエクスポート / Export Data",
    "delete_account": "アカウント削除 / Delete Account"
  }
}
```

## 🚀 実装ステップ

### Phase 1: 基盤構築
1. i18next/Flask-Babel セットアップ
2. 言語リソースファイル作成
3. 基本的な翻訳システム実装

### Phase 2: 設定ページ作成
1. 設定ページレイアウト構築
2. 言語切り替え機能実装
3. 個人情報管理フォーム作成

### Phase 3: 全画面対応
1. 既存全画面の翻訳適用
2. 動的コンテンツの翻訳
3. エラーメッセージの多言語化

### Phase 4: 最適化
1. 翻訳漏れチェック
2. UX改善
3. パフォーマンス最適化

## 💡 期待する成果

### ユーザー体験
- ワンクリックで言語切り替え
- 母国語での快適な利用
- 統合された設定管理
- データの完全コントロール

### 技術的成果
- 国際化対応の完成
- 拡張可能な翻訳システム
- ユーザーフレンドリーな設定画面
- セキュアな個人情報管理

## 🎯 重要な制約・要件

### 既存システムとの互換性
- 現在の全機能を維持
- データベース構造の最小変更
- パフォーマンス影響の最小化

### 翻訳品質
- 自然で正確な翻訳
- UI文脈に適した表現
- 専門用語の統一

### セキュリティ
- 個人情報変更時の認証
- データエクスポートの安全性
- アカウント削除の確認フロー

## 📝 実装指示

**この要件に基づき、既存のBodyScaleアプリに多言語対応と統合設定ページを実装してください。**

**委任事項：**
- 翻訳ライブラリの選択と設定
- 設定ページのレイアウト設計
- 個人情報管理のセキュリティ実装
- 言語切り替えのUX最適化

**期待する成果物：**
- 完全な日本語・英語対応
- 美しく機能的な設定ページ
- セキュアな個人情報管理機能
- 直感的な言語切り替え機能

**国際展開可能なプロフェッショナルアプリを完成させてください！**