# MuscleFormAnalyzer フォーム分析エラー修正プロンプト

## 🚨 緊急バグ修正依頼

### 問題の概要
```
MuscleFormAnalyzerアプリのフォーム分析機能で以下のエラーが発生しています：

【エラーメッセージ】
Internal Server Error
The server encountered an internal error and was unable to complete your request. 
Either the server is overloaded or there is an error in the application.

【発生タイミング】
- フォーム分析機能を実行した際
- カメラからの映像をMediaPipeで処理する段階
```

### 技術スタック詳細
```
【バックエンド】
- Flask/FastAPI (Python)
- MediaPipe (姿勢推定)
- TensorFlow (機械学習)
- SQLite (データベース)

【フロントエンド】
- Next.js 14
- React 18
- Tailwind CSS

【想定される問題箇所】
1. MediaPipeの初期化エラー
2. カメラストリームの処理異常
3. TensorFlowモデルの読み込み失敗
4. メモリ不足によるクラッシュ
5. 依存関係の競合
```

## 📋 デバッグ・修正プロンプト

### 1. 基本デバッグ用プロンプト
```
MuscleFormAnalyzerのフォーム分析機能でInternal Server Errorが発生しています。

【技術構成】
- Python Flask/FastAPI + MediaPipe + TensorFlow
- リアルタイム姿勢推定とフォーム評価
- カメラストリーミング処理

【エラー状況】
- フォーム分析実行時にサーバーエラー
- "Internal Server Error" メッセージ表示
- アプリケーション内部エラーまたはサーバー過負荷

以下の観点から原因特定と修正方法を提示してください：

1. **ログ確認方法**
   - Flaskアプリのエラーログ確認手順
   - MediaPipeのデバッグ出力設定
   - システムリソース監視方法

2. **考えられる原因**
   - MediaPipe初期化失敗
   - カメラアクセス権限問題
   - モデルファイル読み込みエラー
   - メモリ不足・リソース制限

3. **段階的修正手順**
   - エラーハンドリング強化
   - リソース管理の最適化
   - 依存関係の確認・修正
   - テスト環境での検証方法

4. **予防策**
   - 安定性向上のためのコード改善
   - エラー監視システムの導入
   - パフォーマンス最適化
```

### 2. 詳細技術調査用プロンプト
```
MuscleFormAnalyzer - MediaPipeフォーム分析のサーバーエラー詳細調査

【現在の実装推定】
```python
# 想定されるフォーム分析の流れ
@app.route('/analyze_form', methods=['POST'])
def analyze_form():
    # 1. カメラストリーム取得
    # 2. MediaPipe姿勢推定実行
    # 3. 関節座標抽出・フォーム評価
    # 4. 結果をJSON形式で返却
```

【エラー発生ポイント特定】
以下の各段階でのエラーハンドリングと修正コードを提供してください：

**A. MediaPipe初期化段階**
- `mp.solutions.pose` の初期化失敗対応
- GPU/CPU切り替え処理
- モデル読み込みエラーの対処

**B. 画像処理段階**  
- OpenCV画像変換エラー
- フレームレート制御問題
- メモリリーク対策

**C. データ処理段階**
- 姿勢データの欠損処理
- 数値計算エラー対応
- SQLite書き込み失敗対処

**D. レスポンス生成段階**
- JSON形式化エラー
- フロントエンドとの通信異常
- タイムアウト処理

具体的なPythonコード修正例と、エラーログの確認方法も含めて回答してください。
```

### 3. 緊急対応用プロンプト
```
【緊急】MuscleFormAnalyzer フォーム分析機能の即座修復が必要

**状況**: フォーム分析でInternal Server Error、機能完全停止
**技術**: Flask + MediaPipe + TensorFlow + カメラストリーミング

**至急必要な対応**:

1. **即座にできる暫定対策**
   - エラーを回避する一時的な処理
   - ユーザーに分かりやすいエラーメッセージ表示
   - フォールバック機能の実装

2. **最小限のコード修正**
   - try-except文の適切な配置
   - リソース解放処理の追加
   - タイムアウト処理の実装

3. **動作確認手順**
   - ローカル環境での簡単なテスト方法
   - 段階的な機能復旧手順
   - ユーザーへの影響を最小化する方法

**制約条件**:
- 既存のコードベースを大幅に変更できない
- MediaPipeとTensorFlowの依存関係は維持必要
- できるだけ短時間で修復完了したい

具体的で実装しやすい修正コードと手順を優先して提示してください。
```

### 4. 根本原因調査用プロンプト
```
MuscleFormAnalyzer フォーム分析エラーの根本原因分析

【詳細な技術仕様】
- リアルタイム姿勢推定: MediaPipe Pose
- 3D関節追跡とフォーム評価アルゴリズム
- スクワット、ベンチプレス、デッドリフト対応
- 環境適応型ML（Lite/Advancedモード）

【分析が必要な領域】

**1. システムリソース**
- CPU/GPU使用率とメモリ消費
- MediaPipeの推奨動作環境との比較
- 並行処理の負荷分散問題

**2. 依存関係の競合**
- Python package versionsの互換性
- MediaPipe ↔ TensorFlow ↔ OpenCV の組み合わせ
- Next.js frontend との通信プロトコル

**3. データフローの問題**
- カメラ → MediaPipe → 評価アルゴリズム → DB → Frontend
- 各段階でのデータ形式変換エラー
- 非同期処理での競合状態

**4. 環境固有の問題**
- Docker環境での制限事項
- Windows/Mac/Linuxでの動作差異
- カメラデバイスアクセスの権限問題

これらの観点から体系的な原因調査方法と、各問題に対する具体的な解決策を提示してください。ログ分析の手順と、問題の再現・確認方法も含めてお願いします。
```

## 💡 使用方法
1. **緊急時**: プロンプト3を使用して即座の対応策を得る
2. **詳細調査**: プロンプト2で技術的な深掘り分析
3. **根本解決**: プロンプト4で長期的な安定性確保
4. **基本対応**: プロンプト1で一般的なデバッグ手順

## 📋 追加情報の収集
プロンプト使用前に以下の情報があると、より精確な回答が得られます：
- サーバーのエラーログ
- 使用しているPythonパッケージのバージョン
- 実行環境（ローカル/Docker/クラウド）
- エラー発生の再現手順